{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\PomoStudy\\\\src\\\\components\\\\SubjectList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubjectList({\n  sessions = {}\n}) {\n  _s();\n  const [activeSubject, setActiveSubject] = useState(null);\n  const subjects = Object.keys(sessions);\n  if (!subjects.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500\",\n      children: \"No sessions logged yet. Start studying!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n  const formatStart = dateStr => {\n    if (!dateStr) return \"\";\n    const d = new Date(dateStr);\n    if (isNaN(d.getTime())) return dateStr;\n    return `${d.toLocaleDateString()} ${d.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    })}`;\n  };\n\n  // Format as: \"DATE START - END\" where END is calculated from duration (seconds)\n  // Handles older records where `date` might be the end time by using `endTime` when available.\n  const formatRange = (dateStr, durationSeconds, endTimeStr) => {\n    if (!dateStr && !endTimeStr) return \"\";\n\n    // Prefer an explicit start (dateStr) when it represents the start time.\n    // If endTimeStr is provided and no reliable start is present, compute start = end - duration.\n    let startDate = dateStr ? new Date(dateStr) : null;\n    const hasValidStart = startDate && !isNaN(startDate.getTime());\n    let endDate = endTimeStr ? new Date(endTimeStr) : null;\n    const hasValidEnd = endDate && !isNaN(endDate.getTime());\n    if (!hasValidStart && hasValidEnd && durationSeconds && typeof durationSeconds === \"number\") {\n      // compute start from end - duration\n      startDate = new Date(endDate.getTime() - durationSeconds * 1000);\n    }\n\n    // If still no valid start, try to parse dateStr as a fallback\n    if (!startDate || isNaN(startDate.getTime())) {\n      const d = dateStr ? new Date(dateStr) : null;\n      if (d && !isNaN(d.getTime())) startDate = d;\n    }\n    if (!startDate || isNaN(startDate.getTime())) return dateStr || endTimeStr || \"\";\n    const datePart = startDate.toLocaleDateString();\n    const startTime = startDate.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n\n    // Determine end time\n    let endTime = null;\n    if (hasValidEnd) {\n      endTime = endDate.toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    } else if (durationSeconds && typeof durationSeconds === \"number\") {\n      const calcEnd = new Date(startDate.getTime() + durationSeconds * 1000);\n      endTime = calcEnd.toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    }\n    if (endTime) return `${datePart} ${startTime} - ${endTime}`;\n    return `${datePart} ${startTime}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 shadow rounded-2xl p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Study History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveSubject(activeSubject === subject ? null : subject),\n          className: \"w-full text-left px-3 py-2 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-600 dark:hover:bg-blue-900\",\n          children: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), activeSubject === subject && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-4 mt-2 space-y-2\",\n          children: [...(sessions[subject] || [])].slice().reverse().map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-l-2 border-green-500 pl-3 text-sm rounded-md p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: s.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 text-xs ml-2\",\n                children: formatRange(s.date, s.duration, s.endTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this), s.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400\",\n              children: s.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 35\n            }, this)]\n          }, s.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, subject, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(SubjectList, \"dipubmBg6lcx3iMogTjUraEcmXI=\");\n_c = SubjectList;\nvar _c;\n$RefreshReg$(_c, \"SubjectList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SubjectList","sessions","_s","activeSubject","setActiveSubject","subjects","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatStart","dateStr","d","Date","isNaN","getTime","toLocaleDateString","toLocaleTimeString","hour","minute","formatRange","durationSeconds","endTimeStr","startDate","hasValidStart","endDate","hasValidEnd","datePart","startTime","endTime","calcEnd","map","subject","onClick","slice","reverse","s","content","date","duration","notes","id","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/PomoStudy/src/components/SubjectList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function SubjectList({ sessions = {} }) {\r\n  const [activeSubject, setActiveSubject] = useState(null);\r\n\r\n  const subjects = Object.keys(sessions);\r\n\r\n  if (!subjects.length) {\r\n    return (\r\n      <div className=\"text-center text-gray-500\">No sessions logged yet. Start studying!</div>\r\n    );\r\n  }\r\n\r\n  const formatStart = (dateStr) => {\r\n    if (!dateStr) return \"\";\r\n    const d = new Date(dateStr);\r\n    if (isNaN(d.getTime())) return dateStr;\r\n    return `${d.toLocaleDateString()} ${d.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}`;\r\n  };\r\n\r\n  // Format as: \"DATE START - END\" where END is calculated from duration (seconds)\r\n  // Handles older records where `date` might be the end time by using `endTime` when available.\r\n  const formatRange = (dateStr, durationSeconds, endTimeStr) => {\r\n    if (!dateStr && !endTimeStr) return \"\";\r\n\r\n    // Prefer an explicit start (dateStr) when it represents the start time.\r\n    // If endTimeStr is provided and no reliable start is present, compute start = end - duration.\r\n    let startDate = dateStr ? new Date(dateStr) : null;\r\n    const hasValidStart = startDate && !isNaN(startDate.getTime());\r\n\r\n    let endDate = endTimeStr ? new Date(endTimeStr) : null;\r\n    const hasValidEnd = endDate && !isNaN(endDate.getTime());\r\n\r\n    if (!hasValidStart && hasValidEnd && durationSeconds && typeof durationSeconds === \"number\") {\r\n      // compute start from end - duration\r\n      startDate = new Date(endDate.getTime() - durationSeconds * 1000);\r\n    }\r\n\r\n    // If still no valid start, try to parse dateStr as a fallback\r\n    if (!startDate || isNaN(startDate.getTime())) {\r\n      const d = dateStr ? new Date(dateStr) : null;\r\n      if (d && !isNaN(d.getTime())) startDate = d;\r\n    }\r\n\r\n    if (!startDate || isNaN(startDate.getTime())) return dateStr || endTimeStr || \"\";\r\n\r\n    const datePart = startDate.toLocaleDateString();\r\n    const startTime = startDate.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n\r\n    // Determine end time\r\n    let endTime = null;\r\n    if (hasValidEnd) {\r\n      endTime = endDate.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n    } else if (durationSeconds && typeof durationSeconds === \"number\") {\r\n      const calcEnd = new Date(startDate.getTime() + durationSeconds * 1000);\r\n      endTime = calcEnd.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n    }\r\n\r\n    if (endTime) return `${datePart} ${startTime} - ${endTime}`;\r\n    return `${datePart} ${startTime}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 shadow rounded-2xl p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Study History</h2>\r\n\r\n      <div className=\"space-y-2\">\r\n        {subjects.map((subject) => (\r\n          <div key={subject}>\r\n            <button\r\n              onClick={() => setActiveSubject(activeSubject === subject ? null : subject)}\r\n              className=\"w-full text-left px-3 py-2 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-600 dark:hover:bg-blue-900\"\r\n            >\r\n              {subject}\r\n            </button>\r\n\r\n            {activeSubject === subject && (\r\n              <div className=\"pl-4 mt-2 space-y-2\">\r\n                {[...(sessions[subject] || [])]\r\n                  .slice()\r\n                  .reverse()\r\n                  .map((s) => (\r\n                    <div\r\n                      key={s.id}\r\n                      className=\"border-l-2 border-green-500 pl-3 text-sm rounded-md p-2\"\r\n                    >\r\n                      <div>\r\n                        <strong>{s.content}</strong>\r\n                        <span className=\"text-gray-500 text-xs ml-2\">{formatRange(s.date, s.duration, s.endTime)}</span>\r\n                      </div>\r\n                      {s.notes && <div className=\"text-gray-400\">{s.notes}</div>}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}