{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\PomoStudy\\\\src\\\\components\\\\Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  onAddSession,\n  subjects = []\n}) {\n  _s();\n  const STUDY_SECONDS = 25 * 60;\n  const BREAK_SECONDS = 5 * 60;\n  const [mode, setMode] = useState(\"study\"); // 'study' | 'break'\n  const [seconds, setSeconds] = useState(STUDY_SECONDS);\n  const [isActive, setIsActive] = useState(false);\n  const [currentSubject, setCurrentSubject] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalSelect, setModalSelect] = useState(\"\");\n  useEffect(() => {\n    let interval;\n    if (isActive && seconds > 0) {\n      interval = setInterval(() => setSeconds(s => s - 1), 1000);\n    } else if (isActive && seconds === 0) {\n      // timer reached 0 while active\n      clearInterval(interval);\n      setIsActive(false);\n\n      // ask user whether to continue or end session\n      setTimeout(() => {\n        const cont = window.confirm(\"25 minutes finished. Continue session? Click OK to continue, Cancel to end session.\");\n        if (cont) {\n          // restart timer for another session\n          setSeconds(DEFAULT_SECONDS);\n          setIsActive(true);\n        } else {\n          // end session -> prompt for details and save\n          const sections = window.prompt(\"Sections Covered:\", \"\");\n          const notes = window.prompt(\"Additional Notes:\", \"\");\n          if (onAddSession && currentSubject) {\n            onAddSession(currentSubject, sections || \"(no content)\", notes || \"\");\n          }\n          // reset subject after saving\n          setCurrentSubject(null);\n          setSeconds(DEFAULT_SECONDS);\n        }\n      }, 200);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  const toggle = () => setIsActive(!isActive);\n  const reset = () => {\n    setIsActive(false);\n    setSeconds(DEFAULT_SECONDS);\n  };\n\n  // Start with a prompt for subject when starting the timer (if study mode)\n  const startWithPrompt = () => {\n    if (mode === \"study\") {\n      // show modal to enter subject (allow picking previous subjects)\n      const list = subjects || [];\n      const defaultSelect = currentSubject && list.includes(currentSubject) ? currentSubject : list.length ? list[0] : \"\";\n      setModalSelect(defaultSelect);\n      setShowModal(true);\n    } else {\n      // break mode\n      setSeconds(BREAK_SECONDS);\n      setIsActive(true);\n    }\n  };\n  const submitModal = () => {\n    const subject = (modalSelect || \"\").trim();\n    if (!subject) return;\n    setCurrentSubject(subject);\n    setShowModal(false);\n    setSeconds(STUDY_SECONDS);\n    setIsActive(true);\n  };\n  const formatTime = s => {\n    const m = Math.floor(s / 60);\n    const sec = s % 60;\n    return `${m.toString().padStart(2, \"0\")}:${sec.toString().padStart(2, \"0\")}`;\n  };\n\n  // Progress ring calculations\n  const total = mode === \"study\" ? STUDY_SECONDS : BREAK_SECONDS;\n  const elapsed = total - seconds;\n  const progress = seconds <= 0 ? 1 : elapsed / total; // 0..1\n\n  const size = 400; // px\n  const stroke = 10;\n  const radius = (size - stroke) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const dashOffset = useMemo(() => circumference * (1 - progress), [circumference, progress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 shadow rounded-2xl p-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-ring-wrap mx-auto mb-4\",\n      style: {\n        width: size,\n        height: size\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"timer-ring\",\n        width: size,\n        height: size,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"filter\", {\n            id: \"ring-shadow\",\n            x: \"-50%\",\n            y: \"-50%\",\n            width: \"200%\",\n            height: \"200%\",\n            children: /*#__PURE__*/_jsxDEV(\"feDropShadow\", {\n              dx: \"0\",\n              dy: \"2\",\n              stdDeviation: \"4\",\n              floodOpacity: \"0.08\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${size / 2}, ${size / 2})`,\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"ring-bg\",\n            r: radius,\n            fill: \"none\",\n            stroke: \"#eef2f7\",\n            strokeWidth: stroke\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"ring-progress\",\n            r: radius,\n            fill: \"none\",\n            stroke: \"var(--accent)\",\n            strokeWidth: stroke,\n            strokeLinecap: \"round\"\n            // use inline style so react updates attributes each render\n            ,\n            style: {\n              strokeDasharray: circumference,\n              strokeDashoffset: dashOffset,\n              transition: \"stroke-dashoffset 0.45s linear\",\n              transform: \"rotate(-90deg)\",\n              transformBox: \"fill-box\",\n              transformOrigin: \"50% 50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-5xl font-mono\",\n          children: formatTime(seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4\",\n      children: [!currentSubject && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startWithPrompt,\n        className: \"big-start px-6 py-4 rounded bg-blue-600 text-white hover:bg-blue-700\",\n        children: \"Start Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), currentSubject && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsActive(v => !v),\n          className: \"px-4 py-2 rounded bg-yellow-500 text-white hover:bg-yellow-600\",\n          children: isActive ? \"Pause\" : \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Next: switch between study and break\n            if (mode === \"study\") {\n              // move to break\n              setMode(\"break\");\n              setSeconds(BREAK_SECONDS);\n              setIsActive(true);\n            } else {\n              // break mode: prompt to continue or end\n              const cont = window.confirm(\"Break finished. Continue current session? Click OK to continue, Cancel to end session.\");\n              if (cont) {\n                // continue study with same subject\n                setMode(\"study\");\n                setSeconds(STUDY_SECONDS);\n                setIsActive(true);\n              } else {\n                // end session -> prompt for details and save\n                const sections = window.prompt(\"Sections Covered:\", \"\");\n                const notes = window.prompt(\"Additional Notes:\", \"\");\n                if (onAddSession && currentSubject) {\n                  onAddSession(currentSubject, sections || \"(no content)\", notes || \"\");\n                }\n                // reset subject after saving\n                setCurrentSubject(null);\n                setMode(\"study\");\n                setSeconds(STUDY_SECONDS);\n                setIsActive(false);\n              }\n            }\n          },\n          className: \"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"What subject will you be covering?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), (subjects || []).length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: modalSelect,\n          onChange: e => {\n            const v = e.target.value;\n            if (v === \"__other\") {\n              setModalUseOther(true);\n              setModalSelect(\"\");\n            } else {\n              setModalUseOther(false);\n              setModalSelect(v);\n              setModalValue(v);\n            }\n          },\n          className: \"w-full p-2 rounded border mb-3\",\n          children: [subjects.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"__other\",\n            children: \"Other...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), (subjects || []).length === 0 || modalUseOther ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: modalValue,\n          onChange: e => setModalValue(e.target.value),\n          className: \"w-full p-2 rounded border mb-3\",\n          placeholder: \"e.g. Calculus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"px-4 py-2 rounded bg-gray-200\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitModal,\n            className: \"px-4 py-2 rounded bg-blue-600 text-white\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"eCTp4xvknveQePxtXiIRtpUsyPE=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","onAddSession","subjects","_s","STUDY_SECONDS","BREAK_SECONDS","mode","setMode","seconds","setSeconds","isActive","setIsActive","currentSubject","setCurrentSubject","showModal","setShowModal","modalSelect","setModalSelect","interval","setInterval","s","clearInterval","setTimeout","cont","window","confirm","DEFAULT_SECONDS","sections","prompt","notes","toggle","reset","startWithPrompt","list","defaultSelect","includes","length","submitModal","subject","trim","formatTime","m","Math","floor","sec","toString","padStart","total","elapsed","progress","size","stroke","radius","circumference","PI","dashOffset","className","children","style","width","height","id","x","y","dx","dy","stdDeviation","floodOpacity","fileName","_jsxFileName","lineNumber","columnNumber","transform","r","fill","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","transition","transformBox","transformOrigin","onClick","v","value","onChange","e","target","setModalUseOther","setModalValue","map","modalUseOther","type","modalValue","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/PomoStudy/src/components/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nexport default function Timer({ onAddSession, subjects = [] }) {\r\n  const STUDY_SECONDS = 25 * 60;\r\n  const BREAK_SECONDS = 5 * 60;\r\n  const [mode, setMode] = useState(\"study\"); // 'study' | 'break'\r\n  const [seconds, setSeconds] = useState(STUDY_SECONDS);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [currentSubject, setCurrentSubject] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalSelect, setModalSelect] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isActive && seconds > 0) {\r\n      interval = setInterval(() => setSeconds((s) => s - 1), 1000);\r\n    } else if (isActive && seconds === 0) {\r\n      // timer reached 0 while active\r\n      clearInterval(interval);\r\n      setIsActive(false);\r\n\r\n      // ask user whether to continue or end session\r\n      setTimeout(() => {\r\n        const cont = window.confirm(\"25 minutes finished. Continue session? Click OK to continue, Cancel to end session.\");\r\n        if (cont) {\r\n          // restart timer for another session\r\n          setSeconds(DEFAULT_SECONDS);\r\n          setIsActive(true);\r\n        } else {\r\n          // end session -> prompt for details and save\r\n          const sections = window.prompt(\"Sections Covered:\", \"\");\r\n          const notes = window.prompt(\"Additional Notes:\", \"\");\r\n          if (onAddSession && currentSubject) {\r\n            onAddSession(currentSubject, sections || \"(no content)\", notes || \"\");\r\n          }\r\n          // reset subject after saving\r\n          setCurrentSubject(null);\r\n          setSeconds(DEFAULT_SECONDS);\r\n        }\r\n      }, 200);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, seconds]);\r\n\r\n  const toggle = () => setIsActive(!isActive);\r\n  const reset = () => {\r\n    setIsActive(false);\r\n    setSeconds(DEFAULT_SECONDS);\r\n  };\r\n\r\n  // Start with a prompt for subject when starting the timer (if study mode)\r\n  const startWithPrompt = () => {\r\n    if (mode === \"study\") {\r\n      // show modal to enter subject (allow picking previous subjects)\r\n  const list = subjects || [];\r\n  const defaultSelect = currentSubject && list.includes(currentSubject) ? currentSubject : (list.length ? list[0] : \"\");\r\n  setModalSelect(defaultSelect);\r\n      setShowModal(true);\r\n    } else {\r\n      // break mode\r\n      setSeconds(BREAK_SECONDS);\r\n      setIsActive(true);\r\n    }\r\n  };\r\n\r\n  const submitModal = () => {\r\n    const subject = (modalSelect || \"\").trim();\r\n    if (!subject) return;\r\n    setCurrentSubject(subject);\r\n    setShowModal(false);\r\n    setSeconds(STUDY_SECONDS);\r\n    setIsActive(true);\r\n  };\r\n\r\n  const formatTime = (s) => {\r\n    const m = Math.floor(s / 60);\r\n    const sec = s % 60;\r\n    return `${m.toString().padStart(2, \"0\")}:${sec.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Progress ring calculations\r\n  const total = mode === \"study\" ? STUDY_SECONDS : BREAK_SECONDS;\r\n  const elapsed = total - seconds;\r\n  const progress = seconds <= 0 ? 1 : elapsed / total; // 0..1\r\n\r\n  const size = 400; // px\r\n  const stroke = 10;\r\n  const radius = (size - stroke) / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  const dashOffset = useMemo(() => circumference * (1 - progress), [circumference, progress]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 shadow rounded-2xl p-6 text-center\">\r\n      <div className=\"timer-ring-wrap mx-auto mb-4\" style={{ width: size, height: size }}>\r\n        <svg className=\"timer-ring\" width={size} height={size}>\r\n          <defs>\r\n            <filter id=\"ring-shadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\r\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodOpacity=\"0.08\"/>\r\n            </filter>\r\n          </defs>\r\n          <g transform={`translate(${size / 2}, ${size / 2})`}>\r\n            <circle\r\n              className=\"ring-bg\"\r\n              r={radius}\r\n              fill=\"none\"\r\n              stroke=\"#eef2f7\"\r\n              strokeWidth={stroke}\r\n            />\r\n            <circle\r\n              className=\"ring-progress\"\r\n              r={radius}\r\n              fill=\"none\"\r\n              stroke=\"var(--accent)\"\r\n              strokeWidth={stroke}\r\n              strokeLinecap=\"round\"\r\n              // use inline style so react updates attributes each render\r\n              style={{\r\n                strokeDasharray: circumference,\r\n                strokeDashoffset: dashOffset,\r\n                transition: \"stroke-dashoffset 0.45s linear\",\r\n                transform: \"rotate(-90deg)\",\r\n                transformBox: \"fill-box\",\r\n                transformOrigin: \"50% 50%\",\r\n              }}\r\n            />\r\n          </g>\r\n        </svg>\r\n\r\n        <div className=\"timer-center\">\r\n          <div className=\"text-5xl font-mono\">{formatTime(seconds)}</div>\r\n        </div>\r\n      </div>\r\n\r\n  <div className=\"space-x-4\">\r\n        {!currentSubject && (\r\n          <button\r\n            onClick={startWithPrompt}\r\n            className=\"big-start px-6 py-4 rounded bg-blue-600 text-white hover:bg-blue-700\"\r\n          >\r\n            Start Session\r\n          </button>\r\n        )}\r\n\r\n        {currentSubject && (\r\n          <>\r\n            <button\r\n              onClick={() => setIsActive((v) => !v)}\r\n              className=\"px-4 py-2 rounded bg-yellow-500 text-white hover:bg-yellow-600\"\r\n            >\r\n              {isActive ? \"Pause\" : \"Resume\"}\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => {\r\n                // Next: switch between study and break\r\n                if (mode === \"study\") {\r\n                  // move to break\r\n                  setMode(\"break\");\r\n                  setSeconds(BREAK_SECONDS);\r\n                  setIsActive(true);\r\n                } else {\r\n                  // break mode: prompt to continue or end\r\n                  const cont = window.confirm(\r\n                    \"Break finished. Continue current session? Click OK to continue, Cancel to end session.\"\r\n                  );\r\n                  if (cont) {\r\n                    // continue study with same subject\r\n                    setMode(\"study\");\r\n                    setSeconds(STUDY_SECONDS);\r\n                    setIsActive(true);\r\n                  } else {\r\n                    // end session -> prompt for details and save\r\n                    const sections = window.prompt(\"Sections Covered:\", \"\");\r\n                    const notes = window.prompt(\"Additional Notes:\", \"\");\r\n                    if (onAddSession && currentSubject) {\r\n                      onAddSession(currentSubject, sections || \"(no content)\", notes || \"\");\r\n                    }\r\n                    // reset subject after saving\r\n                    setCurrentSubject(null);\r\n                    setMode(\"study\");\r\n                    setSeconds(STUDY_SECONDS);\r\n                    setIsActive(false);\r\n                  }\r\n                }\r\n              }}\r\n              className=\"px-4 py-2 rounded bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600\"\r\n            >\r\n              Next\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3 className=\"text-xl font-semibold mb-2\">What subject will you be covering?</h3>\r\n            {(subjects || []).length > 0 && (\r\n              <select\r\n                value={modalSelect}\r\n                onChange={(e) => {\r\n                  const v = e.target.value;\r\n                  if (v === \"__other\") {\r\n                    setModalUseOther(true);\r\n                    setModalSelect(\"\");\r\n                  } else {\r\n                    setModalUseOther(false);\r\n                    setModalSelect(v);\r\n                    setModalValue(v);\r\n                  }\r\n                }}\r\n                className=\"w-full p-2 rounded border mb-3\"\r\n              >\r\n                {subjects.map((s) => (\r\n                  <option key={s} value={s}>{s}</option>\r\n                ))}\r\n                <option value=\"__other\">Other...</option>\r\n              </select>\r\n            )}\r\n\r\n            {((subjects || []).length === 0) || modalUseOther ? (\r\n              <input\r\n                type=\"text\"\r\n                value={modalValue}\r\n                onChange={(e) => setModalValue(e.target.value)}\r\n                className=\"w-full p-2 rounded border mb-3\"\r\n                placeholder=\"e.g. Calculus\"\r\n              />\r\n            ) : null}\r\n            <div className=\"flex justify-end gap-2\">\r\n              <button onClick={() => setShowModal(false)} className=\"px-4 py-2 rounded bg-gray-200\">Cancel</button>\r\n              <button onClick={submitModal} className=\"px-4 py-2 rounded bg-blue-600 text-white\">Start</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}